# RBAC Configuration for Wiz Todo App
# INTENTIONAL VULNERABILITY: Grants cluster-admin privileges to application service account

apiVersion: v1
kind: ServiceAccount
metadata:
  name: wiz-todo-app-sa
  namespace: default
  labels:
    app: wiz-todo-app
    component: service-account
  annotations:
    description: "Service account for Wiz Todo App - OVERPRIVILEGED"

---
# VULNERABILITY: ClusterRoleBinding grants cluster-admin to application
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: wiz-todo-app-cluster-admin
  labels:
    app: wiz-todo-app
    component: rbac
  annotations:
    description: "VULNERABILITY: Application has cluster-admin privileges"
subjects:
- kind: ServiceAccount
  name: wiz-todo-app-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---
# Additional Role for demonstration (redundant but shows escalation)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: wiz-todo-app-role
  labels:
    app: wiz-todo-app
    component: rbac
rules:
- apiGroups: [""]
  resources: ["pods", "services", "secrets", "configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
# RoleBinding (less important since cluster-admin already grants everything)
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: wiz-todo-app-binding
  namespace: default
  labels:
    app: wiz-todo-app
    component: rbac
subjects:
- kind: ServiceAccount
  name: wiz-todo-app-sa
  namespace: default
roleRef:
  kind: Role
  name: wiz-todo-app-role
  apiGroup: rbac.authorization.k8s.io
name: Terraform Apply
on: 
  workflow_dispatch:
    inputs:
      auto_approve:
        description: 'Auto-approve terraform apply (true/false)'
        required: false
        default: 'false'

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      
      - uses: hashicorp/setup-terraform@v3
      
      - name: Terraform Format Check
        working-directory: terraform
        run: terraform fmt -check
        continue-on-error: true
      
      - name: TfSec Security Scan
        continue-on-error: true
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: terraform
      
      - name: Terraform Init
        working-directory: terraform
        run: |
          echo "ðŸš€ Initializing Terraform..."
          terraform init
      
      - name: Terraform Validate
        working-directory: terraform
        run: |
          echo "âœ… Validating Terraform configuration..."
          terraform validate
      
      - name: Terraform Plan
        working-directory: terraform
        run: |
          echo "ðŸ“‹ Creating Terraform plan..."
          terraform plan -var="aws_region=${{ secrets.AWS_REGION }}" -out=tfplan
      
      - name: Terraform Apply
        working-directory: terraform
        run: |
          if [ "${{ github.event.inputs.auto_approve }}" = "true" ]; then
            echo "ðŸš€ Applying Terraform changes (auto-approved)..."
            terraform apply -auto-approve tfplan
          else
            echo "ðŸ“‹ Plan created successfully. Run with auto_approve=true to apply."
            echo "ðŸ’¡ Or run 'terraform apply tfplan' locally after downloading the plan."
          fi
      
      - name: Terraform Outputs
        if: github.event.inputs.auto_approve == 'true'
        working-directory: terraform
        run: |
          echo "ðŸ“Š Terraform Outputs:"
          terraform output

# Wiz Security Demo - Intentionally Vulnerable Container
# This Dockerfile demonstrates common container security issues that tools like Wiz detect
# Built for educational purposes to show real-world vulnerabilities

FROM node:16.14.0-alpine3.15

# üö® INTENTIONAL SECURITY VULNERABILITIES FOR DEMONSTRATION:
# 
# 1. OUTDATED BASE IMAGE:
#    - Node.js 16.14.0 (released Jan 2022, now 2+ years old)
#    - Known CVEs: CVE-2022-0778 (OpenSSL DoS), CVE-2022-21824 (Node.js prototype pollution)
#    - Alpine 3.15 (released Nov 2021, outdated packages)
#
# 2. SECURITY IMPACT:
#    - Remote code execution potential
#    - Denial of service vulnerabilities  
#    - Package vulnerabilities in base OS
#
# 3. DETECTION:
#    - Wiz would immediately flag these CVEs
#    - Container image scanning would show high/critical findings
#    - Compliance frameworks would mark as non-compliant

# Set working directory
WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
RUN npm install

# Copy application code
COPY . .

# üìã REQUIREMENT VALIDATION: wizexercise.txt file
# The Wiz exercise requires a file named "wizexercise.txt" containing the candidate's name
# This build-time validation ensures the requirement is met before container deployment
RUN echo "üîç Validating required wizexercise.txt file..." && \
    test -f wizexercise.txt && \
    echo "‚úÖ wizexercise.txt file exists" && \
    echo "üìÑ File contents:" && \
    cat wizexercise.txt && \
    test "$(cat wizexercise.txt)" = "Devon Diffie" && \
    echo "‚úÖ wizexercise.txt content validation passed" && \
    echo "üéØ File will be accessible at /app/wizexercise.txt in running container"

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3000

# Start the application
CMD ["node", "server.js"]
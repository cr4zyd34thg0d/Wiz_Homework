# Deployment for database connector application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-connector
  namespace: vulnerable-db
  labels:
    app: db-connector
    project: k8s-vulnerable-db
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: db-connector
  template:
    metadata:
      labels:
        app: db-connector
        project: k8s-vulnerable-db
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: db-connector-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: db-connector
        image: nginx:1.25-alpine
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: DB_PASSWORD
        - name: APP_ENV
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: APP_ENV
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: LOG_LEVEL
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: app-content
          mountPath: /usr/share/nginx/html
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: nginx-config
        configMap:
          name: app-config
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: app-content
        configMap:
          name: app-content
      terminationGracePeriodSeconds: 30
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300

---
# ServiceAccount for the application
apiVersion: v1
kind: ServiceAccount
metadata:
  name: db-connector-sa
  namespace: vulnerable-db
  labels:
    app: db-connector
    project: k8s-vulnerable-db
automountServiceAccountToken: false

---
# ConfigMap for application content
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-content
  namespace: vulnerable-db
  labels:
    app: db-connector
    project: k8s-vulnerable-db
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Database Connector - K8s Vulnerable DB Project</title>
        <style>
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                margin: 0;
                padding: 20px;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                min-height: 100vh;
            }
            .container {
                max-width: 800px;
                margin: 0 auto;
                background: rgba(255, 255, 255, 0.1);
                padding: 30px;
                border-radius: 15px;
                backdrop-filter: blur(10px);
                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            }
            h1 {
                text-align: center;
                margin-bottom: 30px;
                font-size: 2.5em;
                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            }
            .status-card {
                background: rgba(255, 255, 255, 0.2);
                padding: 20px;
                margin: 15px 0;
                border-radius: 10px;
                border-left: 4px solid #4CAF50;
            }
            .info-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                gap: 20px;
                margin: 20px 0;
            }
            .info-item {
                background: rgba(255, 255, 255, 0.15);
                padding: 15px;
                border-radius: 8px;
            }
            .info-item h3 {
                margin: 0 0 10px 0;
                color: #FFD700;
            }
            .endpoints {
                background: rgba(0, 0, 0, 0.2);
                padding: 15px;
                border-radius: 8px;
                margin: 20px 0;
            }
            .endpoints a {
                color: #87CEEB;
                text-decoration: none;
                margin-right: 15px;
            }
            .endpoints a:hover {
                text-decoration: underline;
            }
            .footer {
                text-align: center;
                margin-top: 30px;
                opacity: 0.8;
                font-size: 0.9em;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üöÄ K8s Vulnerable Database Project</h1>
            
            <div class="status-card">
                <h2>‚úÖ Application Status: Running</h2>
                <p>Database connector application is successfully deployed and running in Kubernetes cluster.</p>
            </div>
            
            <div class="info-grid">
                <div class="info-item">
                    <h3>üèóÔ∏è Infrastructure</h3>
                    <p><strong>Cluster:</strong> AWS EKS</p>
                    <p><strong>Namespace:</strong> vulnerable-db</p>
                    <p><strong>Replicas:</strong> 2</p>
                </div>
                
                <div class="info-item">
                    <h3>üóÑÔ∏è Database</h3>
                    <p><strong>Type:</strong> MySQL (DVWA)</p>
                    <p><strong>Location:</strong> EC2 Instance</p>
                    <p><strong>Status:</strong> <span id="db-status">Checking...</span></p>
                </div>
                
                <div class="info-item">
                    <h3>üîí Security</h3>
                    <p><strong>Vulnerabilities:</strong> Intentional</p>
                    <p><strong>Purpose:</strong> Security Testing</p>
                    <p><strong>Environment:</strong> Demo Only</p>
                </div>
                
                <div class="info-item">
                    <h3>üìä Monitoring</h3>
                    <p><strong>Metrics:</strong> Prometheus</p>
                    <p><strong>Dashboards:</strong> Grafana</p>
                    <p><strong>Logging:</strong> CloudWatch</p>
                </div>
            </div>
            
            <div class="endpoints">
                <h3>üîó Available Endpoints:</h3>
                <a href="/health">Health Check</a>
                <a href="/ready">Readiness Check</a>
                <a href="/metrics">Metrics</a>
                <a href="/db-test">Database Test</a>
            </div>
            
            <div class="status-card">
                <h3>üéØ Project Objectives</h3>
                <ul>
                    <li>‚úÖ Deploy EKS cluster with Terraform</li>
                    <li>‚úÖ Setup vulnerable database on EC2</li>
                    <li>‚úÖ Implement CI/CD pipeline</li>
                    <li>‚úÖ Demonstrate K8s connectivity to external DB</li>
                    <li>‚úÖ Security scanning and monitoring</li>
                </ul>
            </div>
            
            <div class="footer">
                <p>üèóÔ∏è Built with Terraform | üöÄ Deployed with GitHub Actions | üîí Secured with Best Practices</p>
                <p>Interview Demo Project - Kubernetes & Cloud Security</p>
            </div>
        </div>
        
        <script>
            // Simple database connectivity check
            fetch('/db-test')
                .then(response => response.ok ? 'Connected' : 'Disconnected')
                .then(status => {
                    document.getElementById('db-status').textContent = status;
                    document.getElementById('db-status').style.color = status === 'Connected' ? '#4CAF50' : '#FF6B6B';
                })
                .catch(() => {
                    document.getElementById('db-status').textContent = 'Error';
                    document.getElementById('db-status').style.color = '#FF6B6B';
                });
        </script>
    </body>
    </html>